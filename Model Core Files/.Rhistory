c(QALY_counter, costs, screen_counter,cancer_diagnostic[8], c(risk_data[15:41]), screen_strategy)
}
results <- data.frame(results)
names(results)[1] <- 'QALY'
names(results)[2] <- 'Cost'
names(results)[3] <- 'Screens'
names(results)[4] <- "Cancer Diagnosed"
names(results)[5:30]<-c("PSA_gamma_survival_1","PSA_gamma_survival_2","PSA_gamma_survival_3",
"PSA_meta_survival_54","PSA_meta_survival_74","PSA_meta_survival_99",
"PSA_beta_1","PSA_beta_2",'PSA_VDG1_sen','PSA_VDG2_sen',
'PSA_VDG3_sen', 'PSA_VDG4_sen',"PSA_MRI_cdr","PSA_US_cdr",
"PSA_log_norm_mean","PSA_log_norm_sd","PSA_cost_strat","PSA_costvar",
"PSA_util_1to3","PSA_util_4","PSA_costscreen","PSA_cost_follow_up",
"PSA_cost_biop","PSA_cost_US","PSA_cost_MRI","mcid")
names(results)[31]<-"alternative"
#directory to save inum/10 sets of case histories and name of files
save(results,file = paste("PSA/PSA_",screen_strategy,"_",ii,".Rdata",sep = ""))
print(paste(ii*10,"%"))
} #End 1 million simulation loop
#results #see result if parellel version
#save results
#see results
merged_result <- matrix(0,nrow = chunks,ncol = 5)
for (i in 1:chunks){
#name of saved files needed
load(paste("PSA/PSA_",screen_strategy,"_",i,".Rdata",sep = ""))
results<-results %>% filter(results[,4]>50 | results[,4]==0)
merged_result[i,1] <- mean(results[,2])
merged_result[i,2] <- mean(results[,3])
merged_result[i,3] <- mean(results[,4])
merged_result[i,4] <- mean(results[,5])
merged_result[i,5] <- mean(results[,9])
}
write.csv(merged_result,file = "PSAresults.csv")
toc()
rm(list=ls())
screen_strategies<-c(0,1,2,3,4,9)
screen_strategy<-0
load(paste("PSA/PSA_",screen_strategy,"_",1,".Rdata",sep = ""))
results<-results %>% filter(results[,4]>50 | results[,4]==0)
results<-results[-c(3:4)]
psaresults<-results
for (i in 2:10){
#name of saved files needed
load(paste("PSA/PSA_",screen_strategy,"_",i,".Rdata",sep = ""))
results<-results %>% filter(results[,4]>50 | results[,4]==0)
results<-results[-c(3:4)]
psaresults<-rbind(psaresults,results)
}
for (j in 2:6){
screen_strategy<-screen_strategies[j]
for (i in 1:10){
#name of saved files needed
load(paste("PSA/PSA_",screen_strategy,"_",i,".Rdata",sep = ""))
results<-results %>% filter(results[,4]>50 | results[,4]==0)
results<-results[-c(3:4)]
psaresults<-rbind(psaresults,results)
}
}
View(psaresults)
View(psaresults)
View(psaresults)
View(psaresults)
psaresults[,29][psaresults[,29]==0]<-"noscreening"
psaresults[,29][psaresults[,29]==1]<-"procas"
psaresults[,29][psaresults[,29]==2]<-"tertiles"
psaresults[,29][psaresults[,29]==3]<-"3yr"
psaresults[,29][psaresults[,29]==4]<-"2yr"
psaresults[,29][psaresults[,29]==9]<-"fullstrat"
psaresults[,29]<-as.factor(psaresults[,29])
save(psaresults,file = paste("PSA/PSA_","psaresults",".Rdata",sep = ""))
View(psaresults)
View(psaresults)
View(results)
View(results)
View(results)
View(results)
View(results)
psaresults<-psaresults[-c(15,16)]
modQ <- bam(data = psaresults,
formula = QALY ~
s(PSA_util_1to3, by = alternative, bs = "cr") +
s(PSA_util_4, by = alternative, bs = "cr") +
s(PSA_gamma_survival_1, by = alternative, bs = "cr") +
s(PSA_gamma_survival_2, by = alternative, bs = "cr") +
s(PSA_gamma_survival_3, by = alternative, bs = "cr") +
s(PSA_meta_survival_54, by = alternative, bs = "cr") +
s(PSA_meta_survival_74, by = alternative, bs = "cr") +
s(PSA_meta_survival_99, by = alternative, bs = "cr") +
s(PSA_beta_1, by = alternative, bs = "cr") +
s(PSA_beta_2, by = alternative, bs = "cr") +
s(PSA_VDG1_sen, by = alternative, bs = "cr") +
s(PSA_VDG2_sen, by = alternative, bs = "cr") +
s(PSA_VDG3_sen, by = alternative, bs = "cr") +
s(PSA_VDG4_sen, by = alternative, bs = "cr") +
s(PSA_log_norm_mean, by = alternative, bs = "cr") +
s(PSA_log_norm_sd, by = alternative, bs = "cr") +
alternative)
summary(modQ)
library("mgcv")
modQ <- bam(data = psaresults,
formula = QALY ~
s(PSA_util_1to3, by = alternative, bs = "cr") +
s(PSA_util_4, by = alternative, bs = "cr") +
s(PSA_gamma_survival_1, by = alternative, bs = "cr") +
s(PSA_gamma_survival_2, by = alternative, bs = "cr") +
s(PSA_gamma_survival_3, by = alternative, bs = "cr") +
s(PSA_meta_survival_54, by = alternative, bs = "cr") +
s(PSA_meta_survival_74, by = alternative, bs = "cr") +
s(PSA_meta_survival_99, by = alternative, bs = "cr") +
s(PSA_beta_1, by = alternative, bs = "cr") +
s(PSA_beta_2, by = alternative, bs = "cr") +
s(PSA_VDG1_sen, by = alternative, bs = "cr") +
s(PSA_VDG2_sen, by = alternative, bs = "cr") +
s(PSA_VDG3_sen, by = alternative, bs = "cr") +
s(PSA_VDG4_sen, by = alternative, bs = "cr") +
s(PSA_log_norm_mean, by = alternative, bs = "cr") +
s(PSA_log_norm_sd, by = alternative, bs = "cr") +
alternative)
summary(modQ)
load("QALYmodel.Rdata")
rm(list=ls())
load("QALYmodel.Rdata")
summary(modQ)
input_vector<-c("PSA_util_1to3"= 0.82,
"PSA_util_4"= 0.75,
"PSA_gamma_survival_1"= -5.462,
"PSA_gamma_survival_2"= -3.814,
"PSA_gamma_survival_3"= -2.723,
"PSA_meta_survival_54"= -1.787,
"PSA_meta_survival_74"= -1.388,
"PSA_meta_survival_99"= -1.011,
"PSA_beta_1"= 1.47,
"PSA_beta_2"= 6.51,
"PSA_VDG1_sen"= 0.85,
"PSA_VDG2_sen"= 0.776,
"PSA_VDG3_sen"= 0.695,
"PSA_VDG4_sen"= 0.61,
"PSA_MRI_cdr"= 5,
"PSA_US_cdr"= 3,
"PSA_log_norm_mean"= 1.07,
"PSA_log_norm_sd"= 1.31)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=19))
input_vector_strategies<-inputvector
input_vector_strategies<-input_vector
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=19))
input_vector_strategies[1:6,]<-input_vector
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1:6,]<-input_vector
names(input_vector_strategies)<-names(input_vector)
input_vector_strategies[,19]<-c(1:6)
names(input_vector_strategies)<-"alternative"
predict.bam(modQ,input_vector_strategies)
names(input_vector_strategies)<-names(input_vector)
names(input_vector_strategies[,19])<-"alternative"
names(input_vector_strategies)<-c(names(input_vector),"alternative")
predict.bam(modQ,input_vector_strategies)
input_vector_strategies[,19]<-as.factor(c(1:6))
predict.bam(modQ,input_vector_strategies)
summary(modQ)
input_vector_strategies[,19]<-as.factor(c("noscreening","2","2yr","3yr","procas","fullstrat"))
predict.bam(modQ,input_vector_strategies)
input_vector<-c("PSA_util_1to3"= 0.82,
"PSA_util_4"= 0.75,
"PSA_gamma_survival_1"= -5.462,
"PSA_gamma_survival_2"= -3.814,
"PSA_gamma_survival_3"= -2.723,
"PSA_meta_survival_54"= -1.787,
"PSA_meta_survival_74"= -1.388,
"PSA_meta_survival_99"= -1.011,
"PSA_beta_1"= 1.47,
"PSA_beta_2"= 6.51,
"PSA_VDG1_sen"= 0.85,
"PSA_VDG2_sen"= 0.776,
"PSA_VDG3_sen"= 0.695,
"PSA_VDG4_sen"= 0.61,
"PSA_MRI_cdr"= 0.0049849249,
"PSA_US_cdr"= 0.0030001112,
"PSA_log_norm_mean"= 1.07,
"PSA_log_norm_sd"= 1.31)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1:6,]<-input_vector
input_vector_strategies[,19]<-as.factor(c("noscreening","2","2yr","3yr","procas","fullstrat"))
names(input_vector_strategies)<-c(names(input_vector),"alternative")
predict.bam(modQ,input_vector_strategies)
View(input_vector_strategies)
View(input_vector_strategies)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1:6,]<-rep(input_vector,6)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1,]<-input_vector
input_vector_strategies[2,]<-input_vector
input_vector_strategies[1,]<-input_vector
input_vector_strategies[2,]<-input_vector
input_vector_strategies[3,]<-input_vector
input_vector_strategies[4,]<-input_vector
input_vector_strategies[5,]<-input_vector
input_vector_strategies[6,]<-input_vector
input_vector_strategies[,19]<-as.factor(c("noscreening","2","2yr","3yr","procas","fullstrat"))
names(input_vector_strategies)<-c(names(input_vector),"alternative")
predict.bam(modQ,input_vector_strategies)
input_vector<-c("PSA_util_1to3"= 0.82/0.822,
"PSA_util_4"= 0.75/0.822,
"PSA_gamma_survival_1"= -5.462,
"PSA_gamma_survival_2"= -3.814,
"PSA_gamma_survival_3"= -2.723,
"PSA_meta_survival_54"= -1.787,
"PSA_meta_survival_74"= -1.388,
"PSA_meta_survival_99"= -1.011,
"PSA_beta_1"= 1.47,
"PSA_beta_2"= 6.51,
"PSA_VDG1_sen"= 0.85,
"PSA_VDG2_sen"= 0.776,
"PSA_VDG3_sen"= 0.695,
"PSA_VDG4_sen"= 0.61,
"PSA_MRI_cdr"= 0.0049849249,
"PSA_US_cdr"= 0.0030001112,
"PSA_log_norm_mean"= 1.07,
"PSA_log_norm_sd"= 1.31)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1,]<-input_vector
input_vector_strategies[2,]<-input_vector
input_vector_strategies[3,]<-input_vector
input_vector_strategies[4,]<-input_vector
input_vector_strategies[5,]<-input_vector
input_vector_strategies[6,]<-input_vector
input_vector_strategies[,19]<-as.factor(c("noscreening","2","2yr","3yr","procas","fullstrat"))
names(input_vector_strategies)<-c(names(input_vector),"alternative")
predict.bam(modQ,input_vector_strategies)
input_vector<-c("PSA_util_1to3"= 0.82,
"PSA_util_4"= 0.75,
"PSA_gamma_survival_1"= exp(-5.462),
"PSA_gamma_survival_2"= exp(-3.814),
"PSA_gamma_survival_3"= exp(-2.723),
"PSA_meta_survival_54"= exp(-1.787),
"PSA_meta_survival_74"= exp(-1.388),
"PSA_meta_survival_99"= exp(-1.011),
"PSA_beta_1"= 1.47,
"PSA_beta_2"= 6.51,
"PSA_VDG1_sen"= 0.85,
"PSA_VDG2_sen"= 0.776,
"PSA_VDG3_sen"= 0.695,
"PSA_VDG4_sen"= 0.61,
"PSA_MRI_cdr"= 0.0049849249,
"PSA_US_cdr"= 0.0030001112,
"PSA_log_norm_mean"= 1.07,
"PSA_log_norm_sd"= 1.31)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1,]<-input_vector
input_vector_strategies[2,]<-input_vector
input_vector_strategies[3,]<-input_vector
input_vector_strategies[4,]<-input_vector
input_vector_strategies[5,]<-input_vector
input_vector_strategies[6,]<-input_vector
input_vector_strategies[,19]<-as.factor(c("noscreening","2","2yr","3yr","procas","fullstrat"))
names(input_vector_strategies)<-c(names(input_vector),"alternative")
predict.bam(modQ,input_vector_strategies)
load(paste("Risksample/risksample_",ii,".Rdata",sep = ""))
load(paste("Risksample/risksample_",1,".Rdata",sep = ""))
summary(modQ)
predict.bam(modQ,input_vector_strategies)
input_vector<-c("PSA_util_1to3"= 0.82,
"PSA_util_4"= 0.75,
"PSA_gamma_survival_1"= -5.462,
"PSA_gamma_survival_2"= -3.814,
"PSA_gamma_survival_3"= -2.723,
"PSA_meta_survival_54"= -1.787,
"PSA_meta_survival_74"= -1.388,
"PSA_meta_survival_99"= -1.011,
"PSA_beta_1"= 1.47,
"PSA_beta_2"= 6.51,
"PSA_VDG1_sen"= 0.85,
"PSA_VDG2_sen"= 0.776,
"PSA_VDG3_sen"= 0.695,
"PSA_VDG4_sen"= 0.61,
"PSA_MRI_cdr"= 0.0049849249,
"PSA_US_cdr"= 0.0030001112,
"PSA_log_norm_mean"= 1.07,
"PSA_log_norm_sd"= 1.31)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1,]<-input_vector
input_vector_strategies[2,]<-input_vector
input_vector_strategies[3,]<-input_vector
input_vector_strategies[4,]<-input_vector
input_vector_strategies[5,]<-input_vector
input_vector_strategies[6,]<-input_vector
predict.bam(modQ,input_vector_strategies)
input_vector_strategies[,19]<-as.factor(c("noscreening","2","2yr","3yr","procas","fullstrat"))
names(input_vector_strategies)<-c(names(input_vector),"alternative")
predict.bam(modQ,input_vector_strategies)
colnames(splitsample[,15:40])<-c("PSA_gamma_survival_1","PSA_gamma_survival_2","PSA_gamma_survival_3",
"PSA_meta_survival_54","PSA_meta_survival_74","PSA_meta_survival_99",
"PSA_beta_1","PSA_beta_2",'PSA_VDG1_sen','PSA_VDG2_sen',
'PSA_VDG3_sen', 'PSA_VDG4_sen',"PSA_MRI_cdr","PSA_US_cdr",
"PSA_log_norm_mean","PSA_log_norm_sd","PSA_cost_strat","PSA_costvar",
"PSA_util_1to3","PSA_util_4","PSA_costscreen","PSA_cost_follow_up",
"PSA_cost_biop","PSA_cost_US","PSA_cost_MRI","mcid")
load(paste("PSA/PSA_",screen_strategy,"_",1,".Rdata",sep = ""))
screen_strategy<-0
load(paste("PSA/PSA_",screen_strategy,"_",1,".Rdata",sep = ""))
psaresults<-results
load(paste("PSA/PSA_",screen_strategy,"_",1,".Rdata",sep = ""))
results<-results %>% filter(results[,4]>50 | results[,4]==0)
results<-results[-c(3:4)]
psaresults<-results
psaresults[,29][psaresults[,29]==0]<-"noscreening"
psaresults[,29][psaresults[,29]==1]<-"procas"
psaresults[,29][psaresults[,29]==2]<-"tertiles"
psaresults[,29][psaresults[,29]==3]<-"3yr"
psaresults[,29][psaresults[,29]==4]<-"2yr"
psaresults[,29][psaresults[,29]==9]<-"fullstrat"
predict.bam(modQ,psaresults)
predict.bam(modQ,input_vector_strategies,type="response")
predict.bam(modQ,input_vector_strategies,type="lpmatrix")
mat<-predict.bam(modQ,input_vector_strategies,type="lpmatrix")
View(mat)
View(mat)
mat<-predict.bam(modQ,input_vector_strategies,type="terms")
View(mat)
View(mat)
predict.bam(modQ,input_vector_strategies,type="response")
predict.bam(modQ,input_vector_strategies,type="response")
modQ <- bam(data = psaresults,
formula = QALY ~
s(PSA_util_1to3, by = alternative, bs = "cr") +
s(PSA_util_4, by = alternative, bs = "cr") +
s(PSA_gamma_survival_1, by = alternative, bs = "cr") +
s(PSA_gamma_survival_2, by = alternative, bs = "cr") +
s(PSA_gamma_survival_3, by = alternative, bs = "cr") +
s(PSA_meta_survival_54, by = alternative, bs = "cr") +
s(PSA_meta_survival_74, by = alternative, bs = "cr") +
s(PSA_meta_survival_99, by = alternative, bs = "cr") +
s(PSA_beta_1, by = alternative, bs = "cr") +
s(PSA_beta_2, by = alternative, bs = "cr") +
s(PSA_VDG1_sen, by = alternative, bs = "cr") +
s(PSA_VDG2_sen, by = alternative, bs = "cr") +
s(PSA_VDG3_sen, by = alternative, bs = "cr") +
s(PSA_VDG4_sen, by = alternative, bs = "cr") +
s(PSA_log_norm_mean, by = alternative, bs = "cr") +
s(PSA_log_norm_sd, by = alternative, bs = "cr") +
alternative)
save(modQ,file="QALYmodel.Rdata")
save(modQ,file="QALYmodel.RDS")
QALYmodel <- readRDS("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.RDS")
save(modQ,file="QALYmodel.RData")
save(modQ,file="QALYmodel.RDS")
save(modQ,file="QALYmodel.RDS")
modQ<-readRDS("QALYmodel.RDS")
rm(list=ls())
modQ<-readRDS("QALYmodel.RDS")
modQ<-readRDS("QALYmodel.RDS")
library("mgcv")
modQ<-readRDS("QALYmodel.RDS")
modQ<-load("QALYmodel.RData")
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[1]
modQ<-modQ[1]
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[20:59]<-NULL
input_vector<-c("PSA_util_1to3"= 0.82,
"PSA_util_4"= 0.75,
"PSA_gamma_survival_1"= -5.462,
"PSA_gamma_survival_2"= -3.814,
"PSA_gamma_survival_3"= -2.723,
"PSA_meta_survival_54"= -1.787,
"PSA_meta_survival_74"= -1.388,
"PSA_meta_survival_99"= -1.011,
"PSA_beta_1"= 1.47,
"PSA_beta_2"= 6.51,
"PSA_VDG1_sen"= 0.85,
"PSA_VDG2_sen"= 0.776,
"PSA_VDG3_sen"= 0.695,
"PSA_VDG4_sen"= 0.61,
"PSA_MRI_cdr"= 0.0049849249,
"PSA_US_cdr"= 0.0030001112,
"PSA_log_norm_mean"= 1.07,
"PSA_log_norm_sd"= 1.31)
input_vector_strategies<-data.frame(matrix(nrow=6,ncol=18))
input_vector_strategies[1,]<-input_vector
input_vector_strategies[2,]<-input_vector
input_vector_strategies[3,]<-input_vector
input_vector_strategies[4,]<-input_vector
input_vector_strategies[5,]<-input_vector
input_vector_strategies[6,]<-input_vector
input_vector_strategies[,19]<-as.factor(c("noscreening","2","2yr","3yr","procas","fullstrat"))
names(input_vector_strategies)<-c(names(input_vector),"alternative")
#Predict the QALYs for each strategy
#This is not giving sensible values at the moment so I need to fix
#Should be ok for now
predict.bam(modQ,input_vector_strategies,type="response")
modQ[2]<-NULL
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[2]<-NULL
#Predict the QALYs for each strategy
#This is not giving sensible values at the moment so I need to fix
#Should be ok for now
predict.bam(modQ,input_vector_strategies,type="response")
#Predict the QALYs for each strategy
#This is not giving sensible values at the moment so I need to fix
#Should be ok for now
predict.bam(modQ,input_vector_strategies)
modQ[4]<-NULL
#Predict the QALYs for each strategy
#This is not giving sensible values at the moment so I need to fix
#Should be ok for now
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[2:4]<-NULL
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
modQ[2:6]<-NULL
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[2:7]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2:12]<-NULL
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[2:31]<-NULL
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[2:31]<-NULL
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modQ[2:44]<-NULL
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodel.Rdata")
modqQ[43]
modQ[43]
modQ[2:43]<-NULL
predict.bam(modQ,input_vector_strategies)
save(modQ,file="QALYmodelslim.RData")
modQ[2]<-NULL
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodelslim.RData")
modQ[3]<-NULL
predict.bam(modQ,input_vector_strategies)
modQ[3]<-NULL
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodelslim.RData")
modQ[2:43]<-NULL
modQ[45]<-NULL
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodelslim.RData")
modQ[2:43]<-NULL
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodelslim.RData")
modQ[3]<-NULL
modQ[3]<-NULL
modQ[3]<-NULL
predict.bam(modQ,input_vector_strategies)
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodelslim.RData")
modQ[3]<-NULL
save(modQ,file="QALYmodelslim.RData")
save(modQ,file="QALYmodelslim.RDS")
load("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodelslim.RData")
QALYmodelslim <- readRDS("~/GitHub/MANC-RISK-SCREEN/Model Core Files/QALYmodelslim.RDS")
saveRDS(modQ,file="QALYmodelslim.RDS")
modQ<-readRDS("QALYmodelslim.RDS")
rm(list=ls())
modQ<-readRDS("QALYmodelslim.RDS")
