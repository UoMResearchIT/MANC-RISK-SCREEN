names(results)[8] <- 'ca_size'
names(results)[9] <- 'screen_detected'
names(results)[10] <- 'US'
names(results)[11] <- 'MRI'
names(results)[12] <- 'Initial_mortality'
names(results)[13] <- 'CD_age'
names(results)[14] <- 'Postca_mortality'
names(results)[15] <- 'screening_round'
#directory to save inum/10 sets of case histories and name of files
save(results,file = paste("PSA/PSA_",ii,".Rdata",sep = ""))
} #End 1 million simulation loop
#results #see result if parellel version
#save results
#see results
merged_result <- matrix(0,nrow = nrow(PSA_all_p),ncol = 6)
for (i in 1:nrow(PSA_all_p)){
#name of saved files needed
load(paste("PSA/PSA_",i,".Rdata",sep = ""))
merged_result[i,1] <- mean(results[,2])
merged_result[i,2] <- mean(results[,3])
merged_result[i,3] <- mean(results[,4])
merged_result[i,4] <- mean(results[,5])
merged_result[i,5] <- mean(results[,9])
merged_result[i,6] <- mean(results[,1])
}
#store main outputs as csv
write.csv(merged_result,file = "PSAresults.csv")
load("PSA_values.RData")
#Factor variable to indicate which alternative the results belong to
alt_num <- 9 #number of alternatives
alternative <- c(rep(1,100))
for (i in 2:alt_num){
alternative <- c(alternative,c(rep(i,100)))
}
alt_names<-c("noscreening","procas","tertiles","3yr","2yr","5yr",
"10yr","lowrisk5yr","lowrisk6yr")
alternative <- as.data.frame(factor(alternative, labels = alt_names))
colnames(alternative) <- c("alternative")
#Load the results data and store in a list
#noscreening
PSA_results <- read.csv(file = "noscreening_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- PSA_results
#Procas
PSA_results <- read.csv(file = "procas_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#tertiles
PSA_results <- read.csv(file = "tertiles_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#3yr
PSA_results <- read.csv(file = "3yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#2yr
PSA_results <- read.csv(file = "2yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#5yr
PSA_results <- read.csv(file = "5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#10yr
PSA_results <- read.csv(file = "10yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk5yr
PSA_results <- read.csv(file = "lowrisk5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk6yr
PSA_results <- read.csv(file = "lowrisk6yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#Data frames with results and parameters
PSA_all <- bind_cols(PSA_results_all, alternative)
alt_num <- 9 #number of alternatives
alternative <- c(rep(1,1000))
for (i in 2:alt_num){
alternative <- c(alternative,c(rep(i,1000)))
}
alt_names<-c("noscreening","procas","tertiles","3yr","2yr","5yr",
"10yr","lowrisk5yr","lowrisk6yr")
alternative <- as.data.frame(factor(alternative, labels = alt_names))
colnames(alternative) <- c("alternative")
#Load the results data and store in a list
#noscreening
PSA_results <- read.csv(file = "noscreening_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- PSA_results
#Procas
PSA_results <- read.csv(file = "procas_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#tertiles
PSA_results <- read.csv(file = "tertiles_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#3yr
PSA_results <- read.csv(file = "3yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#2yr
PSA_results <- read.csv(file = "2yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#5yr
PSA_results <- read.csv(file = "5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#10yr
PSA_results <- read.csv(file = "10yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk5yr
PSA_results <- read.csv(file = "lowrisk5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk6yr
PSA_results <- read.csv(file = "lowrisk6yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#Data frames with results and parameters
PSA_all <- bind_cols(PSA_results_all, alternative)
#Make wide, QALY and cost by alternative
base_data <- (PSA_all) %>%
dplyr::select(one_of(c("id","alternative","QALY","cost"))) %>%
pivot_wider(names_from = alternative, values_from = c(QALY, cost))
#Get incremental QALY and cost for each alternative with no screening as the reference
base_data <- base_data %>%
mutate(delta_QALY_noscreening = QALY_noscreening - QALY_noscreening) %>%
mutate(delta_QALY_procas = QALY_procas - QALY_noscreening) %>%
mutate(delta_QALY_tertiles = QALY_tertiles - QALY_noscreening) %>%
mutate(delta_QALY_3yr = QALY_3yr - QALY_noscreening) %>%
mutate(delta_QALY_2yr = QALY_2yr - QALY_noscreening) %>%
mutate(delta_QALY_5yr = QALY_5yr - QALY_noscreening) %>%
mutate(delta_QALY_10yr = QALY_10yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk5yr = QALY_lowrisk5yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk6yr = QALY_lowrisk6yr - QALY_noscreening) %>%
#mutate(delta_QALY_fullstrat = QALY_fullstrat - QALY_noscreening) %>%
mutate(delta_cost_noscreening = cost_noscreening - cost_noscreening) %>%
mutate(delta_cost_procas = cost_procas - cost_noscreening) %>%
mutate(delta_cost_tertiles = cost_tertiles - cost_noscreening) %>%
mutate(delta_cost_3yr = cost_3yr - cost_noscreening) %>%
mutate(delta_cost_2yr = cost_2yr - cost_noscreening) %>%
mutate(delta_cost_5yr = cost_5yr - cost_noscreening) %>%
mutate(delta_cost_10yr = cost_10yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk5yr = cost_lowrisk5yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk6yr = cost_lowrisk6yr - cost_noscreening) #%>%
#Fitting the GAM
#colnames(PSA_all_p) <- var_names
#Matrix for fitted values
#Fitted_mat <-matrix(0,nrow=1000,ncol=alt_num*2)
#Data frame to store fitted values, parameter values, QALY and cost
fitted <- dplyr::select(PSA_all, one_of(c("id","alternative","QALY","cost"))) %>%
mutate(RID = row_number())
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp") + s(PSA_gamma_survival_2, by = alternative, bs = "tp") + s(PSA_gamma_survival_3, by = alternative, bs = "tp")+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
rm(list=ls())
library("dplyr")
library("tidyr")
library("ggplot2")
library("mgcv")
library("BCEA")
load("PSA_values.RData")
#Factor variable to indicate which alternative the results belong to
alt_num <- 9 #number of alternatives
alternative <- c(rep(1,1000))
for (i in 2:alt_num){
alternative <- c(alternative,c(rep(i,1000)))
}
alt_names<-c("noscreening","procas","tertiles","3yr","2yr","5yr",
"10yr","lowrisk5yr","lowrisk6yr")
alternative <- as.data.frame(factor(alternative, labels = alt_names))
colnames(alternative) <- c("alternative")
#Load the results data and store in a list
#noscreening
PSA_results <- read.csv(file = "noscreening_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- PSA_results
#Procas
PSA_results <- read.csv(file = "procas_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#tertiles
PSA_results <- read.csv(file = "tertiles_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#3yr
PSA_results <- read.csv(file = "3yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#2yr
PSA_results <- read.csv(file = "2yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#5yr
PSA_results <- read.csv(file = "5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#10yr
PSA_results <- read.csv(file = "10yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk5yr
PSA_results <- read.csv(file = "lowrisk5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk6yr
PSA_results <- read.csv(file = "lowrisk6yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#Data frames with results and parameters
PSA_all <- bind_cols(PSA_results_all, alternative)
#Make wide, QALY and cost by alternative
base_data <- (PSA_all) %>%
dplyr::select(one_of(c("id","alternative","QALY","cost"))) %>%
pivot_wider(names_from = alternative, values_from = c(QALY, cost))
#Get incremental QALY and cost for each alternative with no screening as the reference
base_data <- base_data %>%
mutate(delta_QALY_noscreening = QALY_noscreening - QALY_noscreening) %>%
mutate(delta_QALY_procas = QALY_procas - QALY_noscreening) %>%
mutate(delta_QALY_tertiles = QALY_tertiles - QALY_noscreening) %>%
mutate(delta_QALY_3yr = QALY_3yr - QALY_noscreening) %>%
mutate(delta_QALY_2yr = QALY_2yr - QALY_noscreening) %>%
mutate(delta_QALY_5yr = QALY_5yr - QALY_noscreening) %>%
mutate(delta_QALY_10yr = QALY_10yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk5yr = QALY_lowrisk5yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk6yr = QALY_lowrisk6yr - QALY_noscreening) %>%
#mutate(delta_QALY_fullstrat = QALY_fullstrat - QALY_noscreening) %>%
mutate(delta_cost_noscreening = cost_noscreening - cost_noscreening) %>%
mutate(delta_cost_procas = cost_procas - cost_noscreening) %>%
mutate(delta_cost_tertiles = cost_tertiles - cost_noscreening) %>%
mutate(delta_cost_3yr = cost_3yr - cost_noscreening) %>%
mutate(delta_cost_2yr = cost_2yr - cost_noscreening) %>%
mutate(delta_cost_5yr = cost_5yr - cost_noscreening) %>%
mutate(delta_cost_10yr = cost_10yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk5yr = cost_lowrisk5yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk6yr = cost_lowrisk6yr - cost_noscreening) #%>%
#Fitting the GAM
#colnames(PSA_all_p) <- var_names
#Matrix for fitted values
#Fitted_mat <-matrix(0,nrow=1000,ncol=alt_num*2)
#Data frame to store fitted values, parameter values, QALY and cost
fitted <- dplyr::select(PSA_all, one_of(c("id","alternative","QALY","cost"))) %>%
mutate(RID = row_number())
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp") + s(PSA_gamma_survival_2, by = alternative, bs = "tp") + s(PSA_gamma_survival_3, by = alternative, bs = "tp")+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
#QALY model
rm(list=PSA_results_all)
#QALY model
rm(PSA_results_all)
rm(PSA_all_p)
gc()
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp") + s(PSA_gamma_survival_2, by = alternative, bs = "tp") + s(PSA_gamma_survival_3, by = alternative, bs = "tp")+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
memory.limit()
library("dplyr")
library("tidyr")
library("ggplot2")
library("mgcv")
library("BCEA")
gc()
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp") + s(PSA_gamma_survival_2, by = alternative, bs = "tp") + s(PSA_gamma_survival_3, by = alternative, bs = "tp")+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
gc()
gc()
closeAllConnections()
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp"))
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp"))
#+ s(PSA_gamma_survival_2, by = alternative, bs = "tp") + s(PSA_gamma_survival_3, by = alternative, bs = "tp")+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
summary(model1)
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp"))
#+ s(PSA_gamma_survival_3, by = alternative, bs = "tp")+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
summary(model1)
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp"))
#+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
summary(model1)
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp")+s(PSA_meta_survival_54, by = alternative, bs = "tp")
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp")+s(PSA_meta_survival_54, by = alternative, bs = "tp"))
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp")+s(PSA_meta_survival_54, by = alternative, bs = "tp"))
#+ s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
summary(model1)
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp"))
#s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp")+s(PSA_meta_survival_54, by = alternative, bs = "tp")+ s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative))
summary(model1)
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative))
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
#s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp")+s(PSA_meta_survival_54, by = alternative, bs = "tp")+ s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative))
summary(model1)
#Cost model
model2 <- gam(data = PSA_all, formula = cost ~ s(PSA_cost_strat, by = alternative, bs = "tp") + s(PSA_costvar, by = alternative, bs = "tp") + alternative)
#s(PSA_gamma_survival_1, by = alternative, bs = "tp") + s(PSA_gamma_survival_2, by = alternative, bs = "tp") + s(PSA_gamma_survival_3, by = alternative, bs = "tp")+ s(PSA_meta_survival_54, by = alternative, bs = "tp") + s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_cost_strat, by = alternative, bs = "tp") + s(PSA_costvar, by = alternative, bs = "tp") + alternative)
summary(model2)
df<-data.frame(c(rnorm(1000,1,2),c(rnorm(1000,3,6)),c(rnorm(1000,2,4))))
df[,4]<-as.factor(seqalong(1:8))
df[,4]<-as.factor(seq_along(1:8))
df
df<-data.frame(c(rnorm(1000,1,2),c(rnorm(1000,3,6)),c(rnorm(1000,2,4))))
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)),c(rnorm(1000,2,4)))
df[,4]<-as.factor(seq_along(1:8))
dfsplit<-isplit(df,df[,4])
View(dfsplit)
View(dfsplit)
dfsplit2<-split(df,df[,4])
library(doParallel)
library(doParallel)
foreach(i in dfsplit) %dopar%
for (i in length(dfsplit)){
df[i,1:3]<-df[i,1:3]*3
}
foreach(j in 1:dfsplit) %dopar%
for (i in 1:length(dfsplit)){
df[i,1:3]<-df[i,1:3]*3
}
foreach(j = 1:dfsplit) %dopar%
for (i in 1:length(dfsplit)){
df[i,1:3]<-df[i,1:3]*3
}
library(doParallel)
foreach(dfsplit2[[j]] =1:length(dfsplit2) %dopar%
for (i in 1:length(dfsplit)){
df[i,1:3]<-df[i,1:3]*3
}
foreach(j=1:length(dfsplit2) %dopar%
for (i in 1:length(dfsplit)){
df[i,1:3]<-df[i,1:3]*3
}df,df[,4])
}
nextEleme(dfsplit)
nextElement(dfsplit)
nextElem(dfsplit)
dfsplit<-split(df,df[,4])
View(dfsplit)
View(dfsplit)
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)),c(rnorm(1000,2,4)))
df[,4]<-as.factor(seq_along(1:8))
dfsplit<-split(df,df[,4])
foreach(j=1:8) %dopar% {
for (i in 1:length(dfsplit[[j]])){
dfsplit[[j]][i,1:3]<-dfsplit[[j]][i,1:3]*3
}
}
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)),c(rnorm(1000,2,4)))
df[,4]<-as.factor(seq_along(1:6))
dfsplit<-split(df,df[,4])
registerDoParallel(cores=6)
foreach(j=1:8) %dopar% {
for (i in 1:length(dfsplit[[j]])){
dfsplit[[j]][i,1:3]<-dfsplit[[j]][i,1:3]*3
}
}
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)),c(rnorm(1000,2,4)))
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)),c(rnorm(1000,2,4)))
dfsplit}
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)),c(rnorm(1000,2,4)))
df[,4]<-as.factor(seq_along(1:6))
df[,4]<-as.factor(seq_along(1:4))
dfsplit<-split(df,df[,4])
registerDoParallel(cores=4)
foreach(j=1:8) %dopar% {
for (i in 1:length(dfsplit[[j]])){
dfsplit[[j]][i,1:3]<-dfsplit[[j]][i,1:3]*3
}
}
dfsplit[[1]]
foreach(j=1:8) %dopar% {
for (i in 1:length(dfsplit[[j]])){
dfsplit[[j]][i,1:3]<-dfsplit[[j]][i,1:3]*3
}
}
foreach(j=1:4) %dopar% {
for (i in 1:length(dfsplit[[j]])){
dfsplit[[j]][i,1:3]<-dfsplit[[j]][i,1:3]*3
}
}
dfsplit[[j]][1,1:3]
dfsplit[[1]][1,1:3]
typeof(dfsplit[[1]][1,1:3])
typeof(dfsplit[[1]])
df1<-as.data.frame(dfsplit[[1]])
df1
typeof(df1)
df1[1,2]
foreach(j=1:4) %dopar% {
dfit<-as.data.frame(dfsplit[[j]])
for (i in 1:length(dfit){
dfit[i,1:3]<-dfit[[j]][i,1:3]*3
}
}
dfit<-as.data.frame(dfsplit[[j]])
dfit<-as.data.frame(dfsplit[[1]])
dfit
typeof(dfit)
foreach(j=1:4) %dopar% {
dfit<-as.data.frame(dfsplit[[1]])
for (i in 1:length(dfit){
dfit[i,1:3]<-dfit[i,1:3]*3
}
}
foreach(j=1:4) %dopar% {
dfit<-as.data.frame(dfsplit[[j]])
for (i in 1:length(dfit){
dfit[i,1:3]<-dfit[i,1:3]*3
}
}
idfsplit<isplit(df,df[,4])
idfsplit<-isplit(df,df[,4])
foreach(split=idfsplits) %dopar% {
}
foreach(split=idfsplits) %dopar% {
dfit<-as.data.frame(dfsplit[[j]])
for (i in 1:length(dfit){
dfit[i,1:3]<-dfit[i,1:3]*3
}
}
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)),c(rnorm(1000,2,4)))
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)))
df[,3]<-as.factor(seq_along(1:4))
numcores<-4
registerDoParallel(ncores=numcores)
registerDoParallel(cores=numcores)
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)))
df[,3]<-as.factor(seq_along(1:4))
frames=isplit(df,df[,3])
nextElem(frames)
nextElem(frames)
foreach (df[,3]=frames) %dopar% {
}
library(doParallel)
numcores<-4
registerDoParallel(cores=numcores)
df<-data.frame(c(rnorm(1000,1,2)),c(rnorm(1000,3,6)))
df[,3]<-as.factor(seq_along(1:4))
frames=split(df,df[,3])
foreach (i=1:numcores) %dopar% {
currentframe<-frames[[i]]
}
foreach (i=1:numcores) %dopar% {
currentframe<-as.dataframe(frames[[i]])
}
foreach (i=1:numcores) %dopar% {
currentframe<-as.data.frame(frames[[i]])
}
test<-as.data.frame(frames[[1]])
typeof(test)
test<-as.data.frame(unlist(frames[[1]]))
typeof(test)
test<-(unlist(frames[[1]])
typeof(test)
test<-(unlist(frames[[1]]))
typeof(test)
print(test)
print(frames[[1]])
test<-as.data.frame(frames[[1]][,1:2])
typeof(test)
View(test)
View(test)
foreach (i=1:numcores) %dopar% {
for (j in 1:lenth(frames[[i]])) {
frames[[i]][,1:2]<-frames[[i]][,1:2]*3
}
}
foreach (i=1:numcores) %dopar% {
for (j in 1:length(frames[[i]])) {
frames[[i]][,1:2]<-frames[[i]][,1:2]*3
}
}
foreach (i=1:numcores) %dopar% {
for (j in 1:length(frames[[i]])) {
frames[[i]][,1]<-frames[[i]][,1]*3
}
}
foreach (i=1:numcores) %dopar% {
for (j in 1:length(frames[[i]])) {
frames[[i]][j,1]<-frames[[i]][j,1]*3
}
}
foreach (i=1:numcores,.combine="rbind") %dopar% {
for (j in 1:length(frames[[i]])) {
frames[[i]][j,1]<-frames[[i]][j,1]*3
}
}
frames[[1]][j,1]<-frames[[1]][j,1]*3
frames[[1]][1,1]<-frames[[1]][1,1]*3
View(frames)
View(frames)
