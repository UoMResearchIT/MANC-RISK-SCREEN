age <- age + Next_event_time
if(interval_ca == 1){Ca_size <- CD_size}
#Assign an stage category based on tumour size
stage_cat <- cmp_stage_by_size(Ca_size)
if(stage_cat == 1){stage1_counter = stage1_counter+1}
if(stage_cat == 2){stage2_counter = stage2_counter+1}
if(stage_cat == 3){stage3_counter = stage3_counter+1}
if(stage_cat == 4){stage4_counter = stage4_counter+1}
if(stage_cat == 5){DCIS_counter = DCIS_counter+1
costs = costs + (cost_DCIS*current_discount)}
#Generate a cancer specific survival time, accounting for competing risks
Ca_mort_age <- cmp_ca_survival_time(stage_cat,Mort_age,age,CD_age)
if(Ca_mort_age<Mort_age){Mort_age<-Ca_mort_age}
if(stage_cat<3){iStage<-"Early"} else {iStage<-"Late"}
if(age<65){iAge<-"18.64"} else {iAge<-"65plus"}
if(stage_cat <5){costs=costs+(fnModPred(iStage,iAge,Mort_age-age)*current_discount)}
cancer_diagnostic[9] <- c(Mort_age)
cancer_diagnostic[2] <- c(stage_cat)
}else{age <- age + Next_event_time #update age if no cancer
}
#update times for next event
if(screen_count+missed_screen < length(screen_times)){Time_to_screen <- screen_times[screen_count+1] - age}else{Time_to_screen <- 101} #when screen times runs out set time to age 101
Time_to_death <- Mort_age - age
Time_to_CD <- CD_age - age
} #while1 end
if((screen_detected_ca+interval_ca) == 0){cancer_diagnostic[1] <- Mort_age} # recorded age is age of death or cancer incidence
#all ca/screen counters
screen_detected_count <- screen_detected_count + screen_detected_ca
screen_counter <- screen_counter + screen_count
US_counter <- US_counter + US_count
MRI_counter <- MRI_counter + MRI_count
#FP recalls
recall_counter <- recall_counter + recall_count
#first screen detected ca counter
sdfirst_counter <- sdfirst_counter + sdfirst_cancer
#last ca/screen counters
sdlast_counter <- sdlast_counter + sdlast_cancer
lastscreen_counter <- lastscreen_counter + lastscreen_count
#Life-year counter
LY_counter <- LY_counter + (Mort_age-start_age)
#QALY counter
QALY_length <- ceiling(Mort_age)-start_age
if(QALY_length<1){QALY_length <-1}
if(QALY_length>time_horizon-start_age){QALY_length <-time_horizon-start_age}
QALY_vect <- rep(0,QALY_length)
for (y in 1:length(QALY_vect)){
QALY_vect[y] <- (utility_ages[match((ceiling((start_age+y)/5)*5),utility_ages[,1]),2])*(1/(1+discount_health)^y)
QALY_vect[QALY_length]<-QALY_vect[QALY_length]*(1-(ceiling(Mort_age)-Mort_age))
}
if (incidence_age_record > 0){
QALY_vect[floor(incidence_age_record)-start_age] <- utility_stage_cat_y1[stage_cat]*QALY_vect[floor(incidence_age_record)-start_age]*(1-(incidence_age_record-floor(incidence_age_record)))}
if(incidence_age_record>0 & Mort_age-incidence_age_record>1){
QALY_vect[(floor(incidence_age_record)-start_age)+1]<-(utility_stage_cat_y1[stage_cat]*QALY_vect[(floor(incidence_age_record)-start_age)+1]*(incidence_age_record-floor(incidence_age_record)))+
(utility_stage_cat_follow[stage_cat]*QALY_vect[(floor(incidence_age_record)-start_age)+1]*(1-(incidence_age_record-floor(incidence_age_record))))}
if(incidence_age_record > 0 && ceiling(if(Mort_age<100){Mort_age}else{100}) > incidence_age_record+2){
for (y in (incidence_age_record+2):min((incidence_age_record+8),ceiling(if(Mort_age<100){Mort_age}else{100}))){
QALY_vect[y-start_age] <- QALY_vect[y-start_age]*utility_stage_cat_follow[stage_cat]
}
}
QALY_counter <- QALY_counter + sum(QALY_vect,na.rm = TRUE)
} #end j loop
c(LY_counter, QALY_counter, costs, screen_counter, (screen_detected_ca+interval_ca), cancer_diagnostic)
}
results <- data.frame(results)
names(results)[1] <- 'LY'
names(results)[2] <- 'QALY'
names(results)[3] <- 'cost'
names(results)[4] <- 'screens'
names(results)[5] <- 'cancer'
names(results)[6] <- 'age'
names(results)[7] <- 'stage'
names(results)[8] <- 'ca_size'
names(results)[9] <- 'screen_detected'
names(results)[10] <- 'US'
names(results)[11] <- 'MRI'
names(results)[12] <- 'Initial_mortality'
names(results)[13] <- 'CD_age'
names(results)[14] <- 'Postca_mortality'
names(results)[15] <- 'screening_round'
#directory to save inum/10 sets of case histories and name of files
save(results,file = paste("PSA/PSA_",ii,".Rdata",sep = ""))
} #End 1 million simulation loop
#results #see result if parellel version
#save results
#see results
merged_result <- matrix(0,nrow = nrow(PSA_all_p),ncol = 6)
for (i in 1:nrow(PSA_all_p)){
#name of saved files needed
load(paste("PSA/PSA_",i,".Rdata",sep = ""))
merged_result[i,1] <- mean(results[,2])
merged_result[i,2] <- mean(results[,3])
merged_result[i,3] <- mean(results[,4])
merged_result[i,4] <- mean(results[,5])
merged_result[i,5] <- mean(results[,9])
merged_result[i,6] <- mean(results[,1])
}
#store main outputs as csv
write.csv(merged_result,file = "PSAresults.csv")
library("dplyr")
library("tidyr")
library("ggplot2")
library("mgcv")
library("BCEA")
load("PSA_values.RData")
#Factor variable to indicate which alternative the results belong to
alt_num <- 10 #number of alternatives
alternative <- c(rep(1,1000))
for (i in 2:alt_num){
alternative <- c(alternative,c(rep(i,1000)))
}
alt_names<-c("noscreening","procas","tertiles","3yr","2yr","5yr",
"10yr","lowrisk5yr","lowrisk6yr","fullstrat")
alternative <- as.data.frame(factor(alternative, labels = alt_names))
colnames(alternative) <- c("alternative")
#Load the results data and store in a list
#noscreening
PSA_results <- read.csv(file = "noscreening_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- PSA_results
#Procas
PSA_results <- read.csv(file = "procas_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#tertiles
PSA_results <- read.csv(file = "tertiles_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#3yr
PSA_results <- read.csv(file = "3yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#2yr
PSA_results <- read.csv(file = "2yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#5yr
PSA_results <- read.csv(file = "5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#10yr
PSA_results <- read.csv(file = "10yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk5yr
PSA_results <- read.csv(file = "lowrisk5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk6yr
PSA_results <- read.csv(file = "lowrisk6yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#fullstrat
PSA_results <- read.csv(file = "fullstrat_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#Data frames with results and parameters
PSA_all <- bind_cols(PSA_results_all, alternative)
base_data <- (PSA_all) %>%
dplyr::select(one_of(c("id","alternative","QALY","cost"))) %>%
pivot_wider(names_from = alternative, values_from = c(QALY, cost))
#Get incremental QALY and cost for each alternative with no screening as the reference
base_data <- base_data %>%
mutate(delta_QALY_noscreening = QALY_noscreening - QALY_noscreening) %>%
mutate(delta_QALY_procas = QALY_procas - QALY_noscreening) %>%
mutate(delta_QALY_tertiles = QALY_tertiles - QALY_noscreening) %>%
mutate(delta_QALY_3yr = QALY_3yr - QALY_noscreening) %>%
mutate(delta_QALY_2yr = QALY_2yr - QALY_noscreening) %>%
mutate(delta_QALY_5yr = QALY_5yr - QALY_noscreening) %>%
mutate(delta_QALY_10yr = QALY_10yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk5yr = QALY_lowrisk5yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk6yr = QALY_lowrisk6yr - QALY_noscreening) %>%
mutate(delta_QALY_fullstrat = QALY_fullstrat - QALY_noscreening) %>%
mutate(delta_cost_noscreening = cost_noscreening - cost_noscreening) %>%
mutate(delta_cost_procas = cost_procas - cost_noscreening) %>%
mutate(delta_cost_tertiles = cost_tertiles - cost_noscreening) %>%
mutate(delta_cost_3yr = cost_3yr - cost_noscreening) %>%
mutate(delta_cost_2yr = cost_2yr - cost_noscreening) %>%
mutate(delta_cost_5yr = cost_5yr - cost_noscreening) %>%
mutate(delta_cost_10yr = cost_10yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk5yr = cost_lowrisk5yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk6yr = cost_lowrisk6yr - cost_noscreening) #%>%
mutate(delta_cost_fullstrat = cost_fullstrat - cost_noscreening)
#Fitting the GAM
#colnames(PSA_all_p) <- var_names
#Matrix for fitted values
#Fitted_mat <-matrix(0,nrow=1000,ncol=alt_num*2)
#Data frame to store fitted values, parameter values, QALY and cost
fitted <- dplyr::select(PSA_all, one_of(c("id","alternative","QALY","cost"))) %>%
mutate(RID = row_number())
PSA_results <- read.csv(file = "fullstrat_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
library("dplyr")
library("tidyr")
library("ggplot2")
library("mgcv")
library("BCEA")
load("PSA_values.RData")
#Factor variable to indicate which alternative the results belong to
alt_num <- 10 #number of alternatives
alternative <- c(rep(1,1000))
for (i in 2:alt_num){
alternative <- c(alternative,c(rep(i,1000)))
}
alt_names<-c("noscreening","procas","tertiles","3yr","2yr","5yr",
"10yr","lowrisk5yr","lowrisk6yr","fullstrat")
alternative <- as.data.frame(factor(alternative, labels = alt_names))
colnames(alternative) <- c("alternative")
#Load the results data and store in a list
#noscreening
PSA_results <- read.csv(file = "noscreening_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- PSA_results
#Procas
PSA_results <- read.csv(file = "procas_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#tertiles
PSA_results <- read.csv(file = "tertiles_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#3yr
PSA_results <- read.csv(file = "3yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#2yr
PSA_results <- read.csv(file = "2yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#5yr
PSA_results <- read.csv(file = "5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#10yr
PSA_results <- read.csv(file = "10yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk5yr
PSA_results <- read.csv(file = "lowrisk5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk6yr
PSA_results <- read.csv(file = "lowrisk6yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#fullstrat
PSA_results <- read.csv(file = "fullstrat_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#Data frames with results and parameters
PSA_all <- bind_cols(PSA_results_all, alternative)
#CE plane with raw results from monte carlo
#Make wide, QALY and cost by alternative
base_data <- (PSA_all) %>%
dplyr::select(one_of(c("id","alternative","QALY","cost"))) %>%
pivot_wider(names_from = alternative, values_from = c(QALY, cost))
#Get incremental QALY and cost for each alternative with no screening as the reference
base_data <- base_data %>%
mutate(delta_QALY_noscreening = QALY_noscreening - QALY_noscreening) %>%
mutate(delta_QALY_procas = QALY_procas - QALY_noscreening) %>%
mutate(delta_QALY_tertiles = QALY_tertiles - QALY_noscreening) %>%
mutate(delta_QALY_3yr = QALY_3yr - QALY_noscreening) %>%
mutate(delta_QALY_2yr = QALY_2yr - QALY_noscreening) %>%
mutate(delta_QALY_5yr = QALY_5yr - QALY_noscreening) %>%
mutate(delta_QALY_10yr = QALY_10yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk5yr = QALY_lowrisk5yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk6yr = QALY_lowrisk6yr - QALY_noscreening) %>%
mutate(delta_QALY_fullstrat = QALY_fullstrat - QALY_noscreening) %>%
mutate(delta_cost_noscreening = cost_noscreening - cost_noscreening) %>%
mutate(delta_cost_procas = cost_procas - cost_noscreening) %>%
mutate(delta_cost_tertiles = cost_tertiles - cost_noscreening) %>%
mutate(delta_cost_3yr = cost_3yr - cost_noscreening) %>%
mutate(delta_cost_2yr = cost_2yr - cost_noscreening) %>%
mutate(delta_cost_5yr = cost_5yr - cost_noscreening) %>%
mutate(delta_cost_10yr = cost_10yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk5yr = cost_lowrisk5yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk6yr = cost_lowrisk6yr - cost_noscreening) #%>%
mutate(delta_cost_fullstrat = cost_fullstrat - cost_noscreening)
library("dplyr")
library("tidyr")
library("ggplot2")
library("mgcv")
library("BCEA")
load("PSA_values.RData")
#Factor variable to indicate which alternative the results belong to
alt_num <- 10 #number of alternatives
alternative <- c(rep(1,1000))
for (i in 2:alt_num){
alternative <- c(alternative,c(rep(i,1000)))
}
alt_names<-c("noscreening","procas","tertiles","3yr","2yr","5yr",
"10yr","lowrisk5yr","lowrisk6yr","fullstrat")
alternative <- as.data.frame(factor(alternative, labels = alt_names))
colnames(alternative) <- c("alternative")
#Load the results data and store in a list
#noscreening
PSA_results <- read.csv(file = "noscreening_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- PSA_results
#Procas
PSA_results <- read.csv(file = "procas_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#tertiles
PSA_results <- read.csv(file = "tertiles_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#3yr
PSA_results <- read.csv(file = "3yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#2yr
PSA_results <- read.csv(file = "2yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#5yr
PSA_results <- read.csv(file = "5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#10yr
PSA_results <- read.csv(file = "10yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk5yr
PSA_results <- read.csv(file = "lowrisk5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk6yr
PSA_results <- read.csv(file = "lowrisk6yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#fullstrat
PSA_results <- read.csv(file = "fullstrat_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#Data frames with results and parameters
PSA_all <- bind_cols(PSA_results_all, alternative)
#CE plane with raw results from monte carlo
#Make wide, QALY and cost by alternative
base_data <- (PSA_all) %>%
dplyr::select(one_of(c("id","alternative","QALY","cost"))) %>%
pivot_wider(names_from = alternative, values_from = c(QALY, cost))
#Get incremental QALY and cost for each alternative with no screening as the reference
base_data <- base_data %>%
mutate(delta_QALY_noscreening = QALY_noscreening - QALY_noscreening) %>%
mutate(delta_QALY_procas = QALY_procas - QALY_noscreening) %>%
mutate(delta_QALY_tertiles = QALY_tertiles - QALY_noscreening) %>%
mutate(delta_QALY_3yr = QALY_3yr - QALY_noscreening) %>%
mutate(delta_QALY_2yr = QALY_2yr - QALY_noscreening) %>%
mutate(delta_QALY_5yr = QALY_5yr - QALY_noscreening) %>%
mutate(delta_QALY_10yr = QALY_10yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk5yr = QALY_lowrisk5yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk6yr = QALY_lowrisk6yr - QALY_noscreening) %>%
mutate(delta_QALY_fullstrat = QALY_fullstrat - QALY_noscreening) %>%
mutate(delta_cost_noscreening = cost_noscreening - cost_noscreening) %>%
mutate(delta_cost_procas = cost_procas - cost_noscreening) %>%
mutate(delta_cost_tertiles = cost_tertiles - cost_noscreening) %>%
mutate(delta_cost_3yr = cost_3yr - cost_noscreening) %>%
mutate(delta_cost_2yr = cost_2yr - cost_noscreening) %>%
mutate(delta_cost_5yr = cost_5yr - cost_noscreening) %>%
mutate(delta_cost_10yr = cost_10yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk5yr = cost_lowrisk5yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk6yr = cost_lowrisk6yr - cost_noscreening) %>%
mutate(delta_cost_fullstrat = cost_fullstrat - cost_noscreening)
#Fitting the GAM
#colnames(PSA_all_p) <- var_names
#Matrix for fitted values
#Fitted_mat <-matrix(0,nrow=1000,ncol=alt_num*2)
#Data frame to store fitted values, parameter values, QALY and cost
fitted <- dplyr::select(PSA_all, one_of(c("id","alternative","QALY","cost"))) %>%
mutate(RID = row_number())
#QALY model
rm(PSA_results_all)
rm(PSA_all_p)
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp")+s(PSA_meta_survival_54, by = alternative, bs = "tp")+ s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
rm(list=ls())
library("dplyr")
library("tidyr")
library("ggplot2")
library("mgcv")
library("BCEA")
load("PSA_values.RData")
#Factor variable to indicate which alternative the results belong to
alt_num <- 10 #number of alternatives
alternative <- c(rep(1,1000))
for (i in 2:alt_num){
alternative <- c(alternative,c(rep(i,1000)))
}
alt_names<-c("noscreening","procas","tertiles","3yr","2yr","5yr",
"10yr","lowrisk5yr","lowrisk6yr","fullstrat")
alternative <- as.data.frame(factor(alternative, labels = alt_names))
colnames(alternative) <- c("alternative")
#Load the results data and store in a list
#noscreening
PSA_results <- read.csv(file = "noscreening_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- PSA_results
#Procas
PSA_results <- read.csv(file = "procas_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#tertiles
PSA_results <- read.csv(file = "tertiles_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#3yr
PSA_results <- read.csv(file = "3yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#2yr
PSA_results <- read.csv(file = "2yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#5yr
PSA_results <- read.csv(file = "5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#10yr
PSA_results <- read.csv(file = "10yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk5yr
PSA_results <- read.csv(file = "lowrisk5yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#lowrisk6yr
PSA_results <- read.csv(file = "lowrisk6yr_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#fullstrat
PSA_results <- read.csv(file = "fullstrat_PSA.csv")
colnames(PSA_results) <- c("id","QALY","cost","screens","cancer","screen_detected","LY")
PSA_results <- bind_cols(PSA_all_p,PSA_results)
PSA_results_all <- bind_rows(PSA_results_all, PSA_results)
#Data frames with results and parameters
PSA_all <- bind_cols(PSA_results_all, alternative)
#CE plane with raw results from monte carlo
#Make wide, QALY and cost by alternative
base_data <- (PSA_all) %>%
dplyr::select(one_of(c("id","alternative","QALY","cost"))) %>%
pivot_wider(names_from = alternative, values_from = c(QALY, cost))
#Get incremental QALY and cost for each alternative with no screening as the reference
base_data <- base_data %>%
mutate(delta_QALY_noscreening = QALY_noscreening - QALY_noscreening) %>%
mutate(delta_QALY_procas = QALY_procas - QALY_noscreening) %>%
mutate(delta_QALY_tertiles = QALY_tertiles - QALY_noscreening) %>%
mutate(delta_QALY_3yr = QALY_3yr - QALY_noscreening) %>%
mutate(delta_QALY_2yr = QALY_2yr - QALY_noscreening) %>%
mutate(delta_QALY_5yr = QALY_5yr - QALY_noscreening) %>%
mutate(delta_QALY_10yr = QALY_10yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk5yr = QALY_lowrisk5yr - QALY_noscreening) %>%
mutate(delta_QALY_lowrisk6yr = QALY_lowrisk6yr - QALY_noscreening) %>%
mutate(delta_QALY_fullstrat = QALY_fullstrat - QALY_noscreening) %>%
mutate(delta_cost_noscreening = cost_noscreening - cost_noscreening) %>%
mutate(delta_cost_procas = cost_procas - cost_noscreening) %>%
mutate(delta_cost_tertiles = cost_tertiles - cost_noscreening) %>%
mutate(delta_cost_3yr = cost_3yr - cost_noscreening) %>%
mutate(delta_cost_2yr = cost_2yr - cost_noscreening) %>%
mutate(delta_cost_5yr = cost_5yr - cost_noscreening) %>%
mutate(delta_cost_10yr = cost_10yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk5yr = cost_lowrisk5yr - cost_noscreening) %>%
mutate(delta_cost_lowrisk6yr = cost_lowrisk6yr - cost_noscreening) %>%
mutate(delta_cost_fullstrat = cost_fullstrat - cost_noscreening)
#Fitting the GAM
#colnames(PSA_all_p) <- var_names
#Matrix for fitted values
#Fitted_mat <-matrix(0,nrow=1000,ncol=alt_num*2)
#Data frame to store fitted values, parameter values, QALY and cost
fitted <- dplyr::select(PSA_all, one_of(c("id","alternative","QALY","cost"))) %>%
mutate(RID = row_number())
closeAllConnections()
model1 <- gam(data = PSA_all, formula = QALY ~ s(PSA_gamma_survival_1, by = alternative, bs = "tp")+ s(PSA_gamma_survival_2, by = alternative, bs = "tp")+s(PSA_gamma_survival_3, by = alternative, bs = "tp")+s(PSA_meta_survival_54, by = alternative, bs = "tp")+ s(PSA_meta_survival_74, by = alternative, bs = "tp") + s(PSA_meta_survival_99, by = alternative, bs = "tp") + s(PSA_beta_1, by = alternative, bs = "tp") + s(PSA_beta_2, by = alternative, bs = "tp") + s(PSA_VDG1_sen, by = alternative, bs = "tp") + s(PSA_VDG2_sen, by = alternative, bs = "tp") + s(PSA_VDG3_sen, by = alternative, bs = "tp") + s(PSA_VDG4_sen, by = alternative, bs = "tp") +s(PSA_MRI_cdr, by = alternative, bs = "tp")+ s(PSA_US_cdr, by = alternative, bs = "tp")+ s(PSA_log_norm_mean, by = alternative, bs = "tp") + s(PSA_log_norm_sd, by = alternative, bs = "tp") + s(PSA_util_1to3, by = alternative, bs = "tp") + s(PSA_util_4, by = alternative, bs = "tp") + alternative)
